#Attribute Funciton (Attack Damage)
#item = 적용할 아이템
#min/maxamount = 최소/최대값
#baseamount = 기본값

#예제 : set {_i} to addAttackDamageModifier({_i}, 2, 5, 10) = Item에 Attack Damage를 2 ~ 5를 추가한다. 해당 아이템의 기본 값은 10

function AttackDamageModifier(item: item, minamount: number, maxamount: number, baseamount: number):
    set {_randomAmount} to random integer between {_minamount} and {_maxamount}
    add "&rATK + %{_randomAmount}%" to lore of {_item}
    set {_finalAmount} to {_randomAmount} + {_baseamount} - 1
    apply attribute modifier to {_item}:
        attribute: attack damage
        id: "attackdamage"
        slot: mainhand_slot_group
        amount: {_finalAmount}
        operation: add_number
    return {_item}




command /test:
	trigger:
		if player is op:
			set {_item} to netherite sword with nbt from "{""max_damage"":1000,""damage"":1,""repair_cost"":999,""custom_model_data"":1}"
			
			chance of 90%:
				set {_amount} to random integer between 1 and 20
				add "ATspeed + %{_amount}%%%" to lore of {_item}
				set {_amount} to ({_amount}/100)
				apply attribute modifier to {_item}:
					attribute: attack speed
					id: "attackspeed"
					slot: mainhand_slot_group
					amount: {_amount}
					operation: add_scalar
			
			chance of 90%:
				set {_amount} to random integer between 1 and 4
				add "ATK + %{_amount}%" to lore of {_item}
				set {_amount} to {_amount} + 7
				apply attribute modifier to {_item}:
					attribute: attack damage
					id: "attackdamage"
					slot: mainhand_slot_group
					amount: {_amount}
					operation: add_number


			give player 1 of {_item}
